// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PaycheckBackend.Db;

#nullable disable

namespace PaycheckBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221128083443_AddWagesEarnedToWorkday")]
    partial class AddWagesEarnedToWorkday
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PaycheckBackend.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("JobId"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("PayPeriodLength")
                        .HasColumnType("interval");

                    b.Property<double>("PayRate")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("PaycheckBackend.Models.Paycheck", b =>
                {
                    b.Property<int>("PaycheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaycheckId"));

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("JobId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("PaycheckId");

                    b.HasIndex("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("Paychecks");
                });

            modelBuilder.Entity("PaycheckBackend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PaycheckBackend.Models.Workday", b =>
                {
                    b.Property<int>("WorkdayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkdayId"));

                    b.Property<int>("JobId")
                        .HasColumnType("integer");

                    b.Property<int>("PaycheckId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("Tips")
                        .HasColumnType("double precision");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<double>("WagesEarned")
                        .HasColumnType("double precision");

                    b.HasKey("WorkdayId");

                    b.HasIndex("JobId");

                    b.HasIndex("PaycheckId");

                    b.HasIndex("UserId");

                    b.ToTable("Workdays");
                });

            modelBuilder.Entity("PaycheckBackend.Models.Job", b =>
                {
                    b.HasOne("PaycheckBackend.Models.User", "User")
                        .WithMany("Jobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaycheckBackend.Models.Paycheck", b =>
                {
                    b.HasOne("PaycheckBackend.Models.Job", "Job")
                        .WithMany("Paychecks")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaycheckBackend.Models.User", "User")
                        .WithMany("Paychecks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaycheckBackend.Models.Workday", b =>
                {
                    b.HasOne("PaycheckBackend.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaycheckBackend.Models.Paycheck", "Paycheck")
                        .WithMany()
                        .HasForeignKey("PaycheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaycheckBackend.Models.User", "User")
                        .WithMany("Workdays")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Paycheck");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaycheckBackend.Models.Job", b =>
                {
                    b.Navigation("Paychecks");
                });

            modelBuilder.Entity("PaycheckBackend.Models.User", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("Paychecks");

                    b.Navigation("Workdays");
                });
#pragma warning restore 612, 618
        }
    }
}
